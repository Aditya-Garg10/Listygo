pipeline {
  agent any

  stages {
    stage('Checkout adi-be') {
      steps {
        // Ensure a completely fresh workspace
        deleteDir()
        git branch: 'adi-be',
            url:   'https://github.com/Aditya-Garg10/Listygo.git'
      }
    }

    stage('Verify Dockerfile') {
      steps {
        // Just to be 100% sure Jenkins sees your Dockerfile
        sh 'ls -al .'
      }
    }

    stage('Build & Deploy') {
      steps {
        sh '''
          # 1) Tear down anything binding port 8000
          for c in $(docker ps --filter "publish=8000" --format "{{.ID}}"); do
            docker stop $c || true
            docker rm   $c || true
          done

          # 2) Remove the old home-backend-1 if present
          docker stop home-backend-1 || true
          docker rm   home-backend-1 || true

          # 3) Build the new image (no cache!)
          docker build --no-cache -t home-backend .

          # 4) Run it
          docker run -d \
            --name home-backend-1 \
            -p 8000:3000 \
            -v /path/on/host/firebase-credentials.json:/app/firebase-credentials.json \
            home-backend
        '''
      }
    }
  }

  post {
    success { echo '✅ Deployment complete—your updated code is now live!' }
    failure { echo '❌ Deployment failed. Check the logs above.' }
  }
}
