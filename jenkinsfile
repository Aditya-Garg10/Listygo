pipeline {
  agent any
  options { skipDefaultCheckout() }

  stages {
    stage('Checkout adi-be') {
      steps {
        dir('Listygo') {
          git branch: 'adi-be',
              url:   'https://github.com/Aditya-Garg10/Listygo.git'
        }
      }
    }

    stage('Inject secrets') {
      steps {
        // 1) Secret JSON
        withCredentials([file(credentialsId: 'firebase-credentials', variable: 'FIREBASE_JSON')]) {
          sh 'cp $FIREBASE_JSON Listygo/firebase-credentials.json'
        }

        // 2) .env via Config File Provider (if you used it)
        configFileProvider([configFile(fileId: 'listygo-env', variable: 'ENV_FILE')]) {
          sh 'cp $ENV_FILE Listygo/.env'
        }

        // OR, if you added individual secret texts:
        // withCredentials([
        //   string(credentialsId: 'FIREBASE_API_KEY', variable: 'FIREBASE_API_KEY'),
        //   string(credentialsId: 'DB_URL',           variable: 'DB_URL')
        // ]) {
        //   writeFile file: 'Listygo/.env', text: """
        // FIREBASE_API_KEY=${FIREBASE_API_KEY}
        // DB_URL=${DB_URL}
        // """
        // }
      }
    }

    stage('Build Docker Image') {
      steps {
        dir('Listygo') {
          sh 'docker build -t home-backend .'
        }
      }
    }

    stage('Redeploy') {
      steps {
        sh '''
          # stop/remove old
          docker stop home-backend-1 || true
          docker rm   home-backend-1 || true

          # run with secrets mounted
          docker run -d \
            --name home-backend-1 \
            -p 8000:3000 \
            -v $WORKSPACE/Listygo/firebase-credentials.json:/firebase-credentials.json \
            --env-file $WORKSPACE/Listygo/.env \
            home-backend
        '''
      }
    }
  }

  post {
    success { echo '✅ Deployment complete!' }
    failure { echo '❌ Deployment failed – check logs.' }
  }
}
