pipeline {
  agent any

  options {
    skipDefaultCheckout()
  }

  stages {
    stage('Clean & Checkout') {
      steps {
        deleteDir()
        git branch: 'adi-be',
            url:   'https://github.com/Aditya-Garg10/Listygo.git'
      }
    }

    stage('Inject Firebase Creds') {
      steps {
        // replace 'firebase-cred-id' with your managed-file ID
        configFileProvider([configFile(fileId: 'firebase-cred-id', targetLocation: 'firebase-credentials.json')]) {
          echo "✔️ Injected firebase-credentials.json"
        }
      }
    }

    stage('Verify Workspace') {
      steps {
        sh '''
          echo "── Workspace contents ──"
          ls -al .
          echo "──────────────────────"
        '''
      }
    }

    stage('Build & Deploy') {
      agent { label 'docker' }   // <— now correctly inside this stage
      steps {
        sh '''
          # 1) Stop & remove any container binding port 8000
          for c in $(docker ps --filter "publish=8000" --format "{{.ID}}"); do
            docker stop $c || true
            docker rm   $c || true
          done

          # 2) Remove old home-backend-1 if present
          docker rm -f home-backend-1 || true

          # 3) Build new image WITHOUT cache
          docker build --no-cache -t home-backend .

          # 4) Run the fresh container
          docker run -d \
            --name home-backend-1 \
            -p 8000:3000 \
            home-backend
        '''
      }
    }
  }

  post {
    success {
      echo '✅ Deployment complete—your updated code is now live!'
    }
    failure {
      echo '❌ Deployment failed. Check the logs above.'
    }
  }
}
